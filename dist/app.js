(()=>{"use strict";const t={forecast:{today:{},tomorrow:{},dayAfterTomorrow:{}},getData:async function(t){const e=await fetch(`https://api.weatherapi.com/v1/forecast.json?key=baccad5e87644ed197c133503233005&q=${t}&days=3`);if(!e.ok)throw new Error("Error fetching data: "+e.status);const o=await e.json();this.cityName=o.location.name,this.currentTemp=o.current.temp_c.toFixed(0)+"°C",this.currentCondIcon=o.current.condition.icon,this.currentCondText=o.current.condition.text,this.isDayNow=o.current.is_day;const n=o.forecast.forecastday;return this.dayAfterTomorrow=function(t){const e=function(t){const[e,o]=t.split(" "),[n,a,r]=e.split("-"),[i,c]=o.split(":");return`${n}-${a}-${r}T${i}:${c}:00`}(t),o=["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"];let n=new Date(e);return n=n.getDay(),o[n+2]||o[n-5]}(o.location.localtime),this.forecast.today.maxtemp=n[0].day.maxtemp_c.toFixed(0)+"°C",this.forecast.today.mintemp=n[0].day.mintemp_c.toFixed(0)+"°C",this.forecast.today.condIcon=n[0].day.condition.icon,this.forecast.tomorrow.maxtemp=n[1].day.maxtemp_c.toFixed(0)+"°C",this.forecast.tomorrow.mintemp=n[1].day.mintemp_c.toFixed(0)+"°C",this.forecast.tomorrow.condIcon=n[1].day.condition.icon,this.forecast.dayAfterTomorrow.maxtemp=n[2].day.maxtemp_c.toFixed(0)+"°C",this.forecast.dayAfterTomorrow.mintemp=n[2].day.mintemp_c.toFixed(0)+"°C",this.forecast.dayAfterTomorrow.condIcon=n[2].day.condition.icon,this.feelsLike=o.current.feelslike_c.toFixed(0)+"°C",this.chanceOfPrecip=function(t,e){const o=new Date(e),n=t.slice(o.getHours());let a=0,r=0;for(const t of n)t.chance_of_rain>a&&(a=t.chance_of_rain),t.chance_of_snow>r&&(r=t.chance_of_snow);const i=n[0].temp_c<=0;return a>r?"Chance of rain: "+a+"%":a<r?"Chance of snow: "+r+"%":0===a&&0===r?i?"Chance of snow: 0%":"Chance of rain: 0%":void 0}(o.forecast.forecastday[0].hour,o.location.localtime),this.visibility=o.current.vis_km+" km",this.airPressure=o.current.pressure_mb+" mbar",this.windSpeed=o.current.wind_kph.toFixed(0)+" km/h",this.windDegree=o.current.wind_degree,this.humidity=o.current.humidity+"%",this.uvLevel=function(t){let e="";switch(!0){case t<4:e="low";break;case t>=4&&t<=7:e="moderate";break;case t>7:e="high";break;default:e="?"}return e}(o.current.uv),this}},e=function(t){a();const e=document.querySelector(".page-container"),o=document.createElement("main");o.classList.add("error"),o.innerHTML='<p class="error__text"></p>',e.appendChild(o),document.querySelector(".error__text").textContent=t},o=function(t){const e=document.querySelector(".cities-list");e.innerHTML="";for(let o of t)e.innerHTML+=`<li><button class="button city-button" data-city="${o}">${o}</button></li>`},n=function(t){const e=document.querySelector("#suggestion-list");e.innerHTML="",0===t.length?e.style.display="none":e.style.display="block";for(let o of t)e.innerHTML+=`<li class="button suggestion" data-coords="${o.lat},${o.lon}">${o.name}, ${o.country}</li>`};function a(){const t=document.querySelector(".page-container");document.querySelectorAll("main").forEach((e=>{t.removeChild(e)}))}const r={updateStorage:function(t){const e=JSON.stringify(t);localStorage.setItem("history",e)},getFromStorage:function(){if(localStorage.getItem("history")){const t=localStorage.getItem("history"),e=JSON.parse(t);this.data=[...e]}},clearStorage:function(){localStorage.removeItem("history")},data:[],push:function(t){this.data.includes(t)||(this.data.unshift(t),4===this.data.length&&this.data.pop(),this.updateStorage(this.data))}};function i(n){t.getData(n).then((t=>{!function(t){a();const e=document.querySelector(".page-container"),o=document.createElement("main");o.classList.add("main"),o.innerHTML=`\n    <div class="main__head-container">\n      <h2 id="city-name">${t.cityName}</h2>\n      <div class="main__temp-container">\n        <span id="current-temp">${t.currentTemp}</span>\n        <img class="icon" id="current-cond-icon" src="http:${t.currentCondIcon}" alt="${t.currentCondText}" width="64" height="64">\n      </div>\n      <p id="current-cond-text">${t.currentCondText}</p>\n    </div>\n\n    <div class="main__info-container">\n\n      <div class="forecast">\n        <div class="forecast__item" data-index="0">\n          <p class="forecast__text">\n            Today:<br>\n            <span id="forecast-temp-today">max ${t.forecast.today.maxtemp}, min ${t.forecast.today.mintemp}</span>\n          </p>\n          <img class="forecast__icon" src="http:${t.forecast.today.condIcon}" alt="" width="32" height="32">\n        </div>\n        <div class="forecast__item">\n          <p class="forecast__text">\n            Tomorrow:<br>\n            <span id="forecast-temp-tomorrow">max ${t.forecast.tomorrow.maxtemp}, min ${t.forecast.tomorrow.mintemp}</span>\n          </p>\n          <img class="forecast__icon" src="http:${t.forecast.tomorrow.condIcon}" alt="" width="32" height="32">\n        </div>\n        <div class="forecast__item">\n          <p class="forecast__text">\n            <span id="day-after-tomorrow">${t.dayAfterTomorrow}</span>:<br>\n            <span id="forecast-temp-day-after-tomorrow">max ${t.forecast.dayAfterTomorrow.maxtemp}, min ${t.forecast.dayAfterTomorrow.mintemp}</span>\n          </p>\n          <img class="forecast__icon" src="http:${t.forecast.dayAfterTomorrow.condIcon}" alt="" width="32" height="32">\n        </div>\n      </div>\n\n      <div class="main__current-info">\n        <p>Feels like <span id="feels-like">${t.feelsLike}</span></p>\n        <p><span id="chance-of-precip">${t.chanceOfPrecip}</span></p>\n        <p>Visibility: <span id="visibility">${t.visibility}</span></p>\n        <p>Air pressure: <span id="air-pressure">${t.airPressure}</span></p>\n        <p>Wind: <span id="wind-speed">${t.windSpeed}</span>\n          <img class="icon" id="wind-direction-arrow" src="./assets/img/Arrow.svg"\n            alt="arrow pointing to the direction of the wind" height="18px" style="transform: rotate(${t.windDegree+180}deg)">\n        </p>\n        <p>Humidity: <span id="humidity">${t.humidity}</span></p>\n        <p>UV index: <span id="uv-index">${t.uvLevel}</span></p>\n      </div>\n\n    </div>\n  `,e.appendChild(o);const n=document.querySelector("#uv-index");"low"===t.uvLevel?n.style.color="#00d300":"moderate"===t.uvLevel?n.style.color="yellow":"high"===t.uvLevel&&(n.style.color="#ff1d1d")}(t),r.push(t.cityName),o(r.data)})).catch((t=>{e(t.message)}))}r.getFromStorage(),o(r.data),document.querySelector("#search-button").addEventListener("click",(t=>{t.preventDefault(),i(document.querySelector("#search-field").value)})),document.querySelector("#user-location-button").addEventListener("click",(async()=>{try{document.querySelector("#search-field").value="",i(await new Promise(((t,e)=>{navigator.geolocation||e("Your browser doesn't support geolocation!"),navigator.geolocation.getCurrentPosition((e=>{const o=e.coords.latitude,n=e.coords.longitude;t(`${o},${n}`)}),(t=>{e("Couldn't get your location!")}))})))}catch(t){e(t)}})),document.querySelector(".cities-list").addEventListener("click",(t=>{t.target.classList.contains("city-button")&&(document.querySelector("#search-field").value="",i(t.target.dataset.city))})),document.querySelector("#search-field").addEventListener("input",(()=>{const t=document.querySelector("#search-field").value;""!==t?async function(t){const e=await fetch(`https://api.weatherapi.com/v1/search.json?key=baccad5e87644ed197c133503233005&q=${t}`),o=await e.json();return new Promise((t=>t(o)))}(t).then((t=>{n(t)})):n([])})),document.body.addEventListener("click",(t=>{t.target.classList.contains("suggestion")&&(document.querySelector("#search-field").value="",i(t.target.dataset.coords)),document.querySelector("#suggestion-list").style.display="none"}))})();